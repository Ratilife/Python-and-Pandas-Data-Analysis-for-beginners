from pandas import Series
'''
выровнять индекс для series
'''
# Создание серии с продажами в долларах за каждый месяц
usd_sales = Series(data=[112, 234, 345, 456], index=['jan', 'feb', 'mar', 'apr'])
# Создание серии с курсом рубля к доллару для каждого месяца
rub_per_usd_rate = Series(data=[80, 81, 90, 85, 70, 87, 92, 95, 100, 98, 96, 99],
                         index=['jan', 'feb', 'mar', 'apr',
                                'may', 'jun', 'jul', 'aug',
                                'sep', 'oct', 'nov', 'dec'])

# Рассчитайте продажи в рублях, умножая продажи в долларах на курс рубля
rub_sales = usd_sales * rub_per_usd_rate
print('Рублей sales:')
print(rub_sales)

# Вывод рублевых продаж, исключая значения NA (неизвестные)
print('\nРублевые продажи без NA:')
print(rub_sales.dropna())

# Умножение с использованием метода multiply, чтобы заполнить отсутствующие значения нулями
'''
Основные особенности метода multiply():
    Поэлементное умножение: Умножает значения поэлементно, 
                то есть каждое значение в одном объекте умножается на соответствующее значение
                в другом объекте.
    Обработка отсутствующих значений: Если для какого-то индекса в одном из объектов 
                нет значения, метод может использовать значение, указанное в параметре 
                fill_value, вместо NaN. Это позволяет избежать появления NaN в результате.
    Сохранение индексов: Результирующий объект будет иметь индексы, которые объединяют 
                индексы обоих объектов.
Series.multiply(other, axis='index', level=None, fill_value=None)
Параметры:
    other:
        Это объект Series или DataFrame, с которым Вы хотите выполнить умножение.
        Если это Series, то индексы будут выравнены по индексу вызывающего объекта.
    axis:
        Указывает, по какому оси выполнять операцию. По умолчанию это 'index', что означает, что операция будет выполняться по индексам.
        Для DataFrame можно указать 'columns', чтобы выполнить операцию по столбцам.
    level:
        Используется для выполнения операции на определенном уровне в многоуровневом индексе (MultiIndex).
        По умолчанию None, что означает, что операция будет выполнена на всех уровнях.
    fill_value:
        Значение, которое будет использоваться для отсутствующих индексов.
        Если указано, то вместо NaN будет использоваться это значение при умножении.
Возвращаемое значение:
    Метод возвращает новый объект Series или DataFrame, 
    содержащий результат поэлементного умножения.                
'''
rub_sales_no_na = usd_sales.multiply(rub_per_usd_rate, fill_value=0)
print('\nПродажи рублей без NA:')
print(rub_sales_no_na)
